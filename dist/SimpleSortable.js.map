{"version":3,"sources":["SimpleSortable.js"],"names":["SimpleSortable","newOrderHandler","window","addEventListener","dragged","draggedY","target","selectorItems","list","document","querySelectorAll","forEach","item","e","getBoundingClientRect","y","style","border","preventDefault","parentNode","removeChild","after","before","newOrder","a","push","dataset","id"],"mappings":";;;;;;;AAAA,SAASA,cAAT,CAAwBC,eAAxB,EAAyC;AACrCC,EAAAA,MAAM,CAACC,gBAAP,CAAwB,MAAxB,EAAgC,YAAM;AAClC,QAAIC,OAAJ;AACA,QAAIC,QAAJ;AACA,QAAIC,MAAJ;AACA,QAAIC,aAAa,GAAG,qBAApB;AACA,QAAMC,IAAI,GAAGC,QAAQ,CAACC,gBAAT,CAA0BH,aAA1B,CAAb;AACAC,IAAAA,IAAI,CAACG,OAAL,CAAa,UAACC,IAAD,EAAU;AAEnBA,MAAAA,IAAI,CAACT,gBAAL,CAAsB,WAAtB,EAAmC,UAACU,CAAD,EAAO;AACtCT,QAAAA,OAAO,GAAGS,CAAC,CAACP,MAAZ;AACAD,QAAAA,QAAQ,GAAGD,OAAO,CAACU,qBAAR,GAAgCC,CAA3C;AACAX,QAAAA,OAAO,CAACY,KAAR,CAAcC,MAAd,GAAuB,gBAAvB;AACH,OAJD;AAMAL,MAAAA,IAAI,CAACT,gBAAL,CAAsB,WAAtB,EAAmC,UAACU,CAAD,EAAO;AACtC,YAAIT,OAAO,KAAKS,CAAC,CAACP,MAAlB,EAA0B;AACtBA,UAAAA,MAAM,GAAGO,CAAC,CAACP,MAAX;AACH;AACJ,OAJD;AAMAM,MAAAA,IAAI,CAACT,gBAAL,CAAsB,SAAtB,EAAiC,UAACU,CAAD,EAAO;AACpCA,QAAAA,CAAC,CAACK,cAAF;;AACA,YAAIZ,MAAJ,EAAY;AACR,cAAID,QAAQ,GAAGC,MAAM,CAACQ,qBAAP,GAA+BC,CAA9C,EAAiD;AAC7CX,YAAAA,OAAO,CAACe,UAAR,CAAmBC,WAAnB,CAA+BhB,OAA/B;AACAE,YAAAA,MAAM,CAACe,KAAP,CAAajB,OAAb;AACH,WAHD,MAGO;AACHA,YAAAA,OAAO,CAACe,UAAR,CAAmBC,WAAnB,CAA+BhB,OAA/B;AACAE,YAAAA,MAAM,CAACgB,MAAP,CAAclB,OAAd;AACH;AACJ;;AAEDA,QAAAA,OAAO,CAACY,KAAR,CAAcC,MAAd,GAAuB,GAAvB;AAEA,YAAIM,QAAQ,GAAG,EAAf;AACAd,QAAAA,QAAQ,CAACC,gBAAT,CAA0BH,aAA1B,EAAyCI,OAAzC,CAAiD,UAAAa,CAAC,EAAI;AAClDD,UAAAA,QAAQ,CAACE,IAAT,CAAcD,CAAC,CAACE,OAAF,CAAUC,EAAxB;AACH,SAFD;AAGA1B,QAAAA,eAAe,CAACsB,QAAD,CAAf;AACH,OAnBD,EAmBG,KAnBH;AAoBH,KAlCD;AAmCH,GAzCD;AA0CH;;eAEcvB","file":"SimpleSortable.js","sourceRoot":"../src","sourcesContent":["function SimpleSortable(newOrderHandler) {\n    window.addEventListener(\"load\", () => {\n        let dragged;\n        let draggedY;\n        let target;\n        let selectorItems = \".simple-sortable li\";\n        const list = document.querySelectorAll(selectorItems);\n        list.forEach((item) => {\n            \n            item.addEventListener(\"dragstart\", (e) => {\n                dragged = e.target;\n                draggedY = dragged.getBoundingClientRect().y;\n                dragged.style.border = \"1px solid #000\";\n            });\n            \n            item.addEventListener(\"dragenter\", (e) => {\n                if (dragged !== e.target) {\n                    target = e.target;\n                }\n            });\n            \n            item.addEventListener(\"dragend\", (e) => {\n                e.preventDefault();\n                if (target) {\n                    if (draggedY < target.getBoundingClientRect().y) {\n                        dragged.parentNode.removeChild(dragged);\n                        target.after(dragged);\n                    } else {\n                        dragged.parentNode.removeChild(dragged);\n                        target.before(dragged);\n                    }\n                }\n                \n                dragged.style.border = \"0\";\n                \n                let newOrder = [];\n                document.querySelectorAll(selectorItems).forEach(a => {\n                    newOrder.push(a.dataset.id);\n                });\n                newOrderHandler(newOrder);\n            }, false);\n        });\n    });\n}\n\nexport default SimpleSortable;\n"]}