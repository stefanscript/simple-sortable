{"version":3,"sources":["SimpleSortable.js"],"names":["SimpleSortable","newOrderHandler","window","addEventListener","dragged","draggedY","target","document","querySelectorAll","forEach","item","setAttribute","e","getBoundingClientRect","y","style","border","preventDefault","parentNode","removeChild","after","before","newOrder","a","push","dataset","id"],"mappings":";AA6CeA,aA7Cf,SAASA,EAAeC,GACpBC,OAAOC,iBAAiB,OAAQ,WACxBC,IAAAA,EACAC,EACAC,EAESC,SAASC,iBADF,uBAEfC,QAAQ,SAACC,GACVA,EAAKC,aAAa,aAAa,GAC/BD,EAAKP,iBAAiB,YAAa,SAACS,GAChCR,EAAUQ,EAAEN,OACZD,EAAWD,EAAQS,wBAAwBC,EAC3CV,EAAQW,MAAMC,OAAS,mBAG3BN,EAAKP,iBAAiB,YAAa,SAACS,GAC5BR,IAAYQ,EAAEN,SACdA,EAASM,EAAEN,UAInBI,EAAKP,iBAAiB,UAAW,SAACS,GAC9BA,EAAEK,iBACEX,IACID,EAAWC,EAAOO,wBAAwBC,GAC1CV,EAAQc,WAAWC,YAAYf,GAC/BE,EAAOc,MAAMhB,KAEbA,EAAQc,WAAWC,YAAYf,GAC/BE,EAAOe,OAAOjB,KAItBA,EAAQW,MAAMC,OAAS,IAEnBM,IAAAA,EAAW,GACff,SAASC,iBA/BG,uBA+B6BC,QAAQ,SAAAc,GAC7CD,EAASE,KAAKD,EAAEE,QAAQC,MAE5BzB,EAAgBqB,KACjB,OAKAtB,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,aAAAA,EAAAA,IAAAA,EAAAA,EAAAA,QAAAA,QAAAA","file":"SimpleSortable.js","sourceRoot":"../src","sourcesContent":["function SimpleSortable(newOrderHandler) {\n    window.addEventListener(\"load\", () => {\n        let dragged;\n        let draggedY;\n        let target;\n        let selectorItems = \".simple-sortable li\";\n        const list = document.querySelectorAll(selectorItems);\n        list.forEach((item) => {\n            item.setAttribute(\"draggable\", true);\n            item.addEventListener(\"dragstart\", (e) => {\n                dragged = e.target;\n                draggedY = dragged.getBoundingClientRect().y;\n                dragged.style.border = \"1px solid #000\";\n            });\n            \n            item.addEventListener(\"dragenter\", (e) => {\n                if (dragged !== e.target) {\n                    target = e.target;\n                }\n            });\n            \n            item.addEventListener(\"dragend\", (e) => {\n                e.preventDefault();\n                if (target) {\n                    if (draggedY < target.getBoundingClientRect().y) {\n                        dragged.parentNode.removeChild(dragged);\n                        target.after(dragged);\n                    } else {\n                        dragged.parentNode.removeChild(dragged);\n                        target.before(dragged);\n                    }\n                }\n                \n                dragged.style.border = \"0\";\n                \n                let newOrder = [];\n                document.querySelectorAll(selectorItems).forEach(a => {\n                    newOrder.push(a.dataset.id);\n                });\n                newOrderHandler(newOrder);\n            }, false);\n        });\n    });\n}\n\nexport default SimpleSortable;\n"]}